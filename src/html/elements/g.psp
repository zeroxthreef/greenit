<%@ include file="/elements/header.psp" %>
	<div class="feed">
		
		<%= generate_nav(request->not_query) %>
		
		<%
			array(string) sub_uri = trim_uri(request->not_query) / "/";
			string sub_path = "";
			int sg_home = 0;
			
			//write("hey " + trim_uri(request->not_query) + "\n");
			
			if(sizeof(sub_uri) > 2)
				sub_path += sub_uri[3];
			
			if(sizeof(sub_uri) > 2 && sub_path == "")
				sg_home++;
			
			if(sg_home || sizeof(sub_uri) <= 2 || sub_path == "new" || sub_path == "popular" || sub_path == "controversial" || sub_path[0] == 'p')
			{
				//detect the page
				int good = 0;
				
				if(subgreenit_exists(request->not_query))
				{
					if(sizeof(sub_path))
					{
						if(sub_path[0] == 'p' && sub_path[1] != 'o') //its the home page
						{
							string temp = sub_path[1..];
							
							int page = (int)temp;
							out += get_subgreenit_posts(current_subgreenit(trim_uri(request->not_query)), sub_path, page);
						}
						else //its any other
						{
							if(sub_uri[4])
							{
								string temp = sub_uri[4][1..];
								
								int page = (int)temp;
								out += get_subgreenit_posts(current_subgreenit(trim_uri(request->not_query)), sub_path, page);
							}
							else
								out += get_subgreenit_posts(current_subgreenit(trim_uri(request->not_query)), sub_path, 0);
						}
					}
					else
						out += get_subgreenit_posts(current_subgreenit(trim_uri(request->not_query)), sub_path, 0);
				}
				else
					out += "<h1>Subgreenit has not been created. You can create it.</h1>";
				
			}
			else if(sub_path == "create")
			{
				string response = "";
				
				if(request->method == "POST" && user_logged_in(request->cookies->token))
				{
					//create the post db things
					string posts_key = db_prefix + "variable:" + current_subgreenit(request->not_query) + ":posts";
					
					
					if(strlen(request->variables->body) > 9000)
						response += "Post too large. Keep it under 9000 characters";
					
					else if(is_clean_title_string(request->variables->title))
					{
						int r_num;
						string sg_post_key;
						string user_post_key = db_prefix + "user:" + username_from_token(request->cookies->token) + ":posts";
						
						//remke the key in a loop and make sure the random number never collides
						do
						{
							r_num = random(50000000); //50 mil should be adequate enough
							sg_post_key = db_prefix + "post:" + current_subgreenit(request->not_query) + ":" + r_num + safe_title_string(request->variables->title);
						}while(db->exists(sg_post_key));
						
						db->lpush(posts_key, sg_post_key);
						
						//create the post key
						db->hmset(sg_post_key, "creator", username_from_token(request->cookies->token), "body", request->variables->body, "post_date", Protocols.HTTP.Server.http_date(time()), "upvotes", "0", "downvotes", "0", "parent", current_subgreenit(request->not_query), "title", request->variables->title, "deleted", "0");
						//add this post to the users post counter
						db->lpush(user_post_key, sg_post_key);
						
						response += "Created post at <a href=\"/" + banner_current_subgreenit(request->not_query) + "/comments/" + r_num + safe_title_string(request->variables->title) + "\">" + banner_current_subgreenit(request->not_query) + "/comments/" + r_num + safe_title_string(request->variables->title) + "</a>";
					}
					else
						response += "Please keep the post title under 50 characters and over 3 characters long. Also must only contain printable characters and no underscores";
				}
				
				out += format_notes + response;
				out += get_create_form(current_subgreenit(request->not_query));
			}
			else if(sub_path == "comments") //the comments page
			{
				//draw the post and comments
				out += get_comments_post(request->not_query);
				out += "<hr></hr>";
				out += "comments go here";
			}
			else if(sub_path == "css")
			{
				out += "<h1>Edit " + banner_current_subgreenit(request->not_query) + " CSS</h1>";
				
				//feedback goes here
				
				string key = db_prefix + "subgreenit:" + current_subgreenit(request->not_query);
				
				if(subgreenit_exists(request->not_query))
					if(username_from_token(request->cookies->token) == replace(db->hget(key, "creator"), "\r\n", "") || user_is_moderator(request->cookies->token, request->not_query) || user_is_admin(request->cookies->token))
					{
						out += "yeah";
					}
					else
						out += "Insufficient permissions";
				
			}
			else
				out += "youre in a place";
		%>
		
		<%= generate_nav(request->not_query) %>
		
	</div>
	
	<%@ include file="/elements/controls.psp" %>
	
</div>
<%@ include file="/elements/footer.psp" %>